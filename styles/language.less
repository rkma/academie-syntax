.syntax--comment {
  color: @comment;
  font-style: italic;

  &.syntax--documentation { color: @documentation; }
  .syntax--markup.syntax--link { color: fade(@md-link-url, 50%); }
}

.syntax--keyword {
  &.syntax--control { color: @keyword;
    &.syntax--language { color: @language; }
  }
  &.syntax--operator { color: @operator; }
  &.syntax--other {
    &.syntax--special-method { color: @special-method; }
    &.syntax--unit { color: @html-unit; }
  }
}

.syntax--constant {
  &.syntax--variable { color: @constant; }
  &.syntax--numeric { color: @number; }
  &.syntax--character.syntax--escape { color: @char-esc; }
  &.syntax--language { color: @language; }
  &.syntax--other {
    &.syntax--symbol { color: @symbol; }
    &.syntax--placeholder { color: @wildcard; }
  }
}

.syntax--entity {
  &.syntax--name {
    &.syntax--function { color: @function-def; }
    &.syntax--class { color: @class-def; }
    &.syntax--module { color: @class-def; }
    &.syntax--tag {
      color: @html-property-name;

      &.syntax--structure { color: @syntax-text-color; }
    }
  }
  &.syntax--other {
    &.syntax--inherited-class { color: @class-call; }
    &.syntax--attribute-name { color: @html-attribute-name; }
  }
}

.syntax--support {
  &.syntax--class { color: @class-call; }
  &.syntax--function { color: @function-call; }
  &.syntax--property-name { color: @html-property-name; }
  &.syntax--property-value { color: @html-property-value; }
}

.syntax--variable {
  font-style: normal;

  &.syntax--block { color: @variable; }
  &.syntax--language { color: @language; }
  &.syntax--parameter { color: @variable; }
  &.syntax--readwrite { color: @readwrite }
  &.syntax--wildcard { color: @wildcard; }
  &.syntax--unused { color: @unused; }
}

.syntax--string {
  color: @string;

  &.syntax--regexp { color: @regexp; }
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--parameters { color: @function-def; }
    &.syntax--tag { color: @html-separator; }
  }
  &.syntax--section {
    &.syntax--embedded, .syntax--empty { color: @interpol; }
    &.syntax--array, &.syntax--scope { color: @separator; }
    &.syntax--function { color: @function-call; }
  }
  &.syntax--separator {
    &.syntax--namespace, &.syntax--variable, &.syntax--object { color: @separator; }
    &.syntax--method { color: @function-call; }
    &.syntax--key-value { color: @operator; }
  }
}

.syntax--embedded { color: @syntax-text-color; }

.syntax--underline { text-decoration: underline; }

.syntax--storage {
  &.syntax--type { color: @storage;
    &.syntax--function { color: @function-def; }
    &.syntax--class { color: @keyword; }
  }
}

.syntax--meta {
  &.syntax--tag {
    .syntax--string { color: @html-property-value; }
  }
}

.syntax--invalid {
  &.syntax--deprecated {
    color: darken(@syntax-color-modified, 50%) !important;
    background-color: @syntax-color-modified !important;
  }
  &.syntax--illegal {
    color: @bright-white !important;
    background-color: @syntax-color-removed !important;
  }
}

// SPECIFIC -----------------------------------------------------

.syntax--markup {
  &.syntax--heading {
    background-color: @md-heading;
    color: @bright-black;
    font-weight: bold;

    &.syntax--marker, &.syntax--space {
      background-color: @syntax-background-color;
      color: @md-heading;
    }
  }
  &.syntax--bold {
    color: @md-bold;
    font-weight: bold;
  }
  &.syntax--italic {
    color: @md-italic;
    font-style: italic;
  }
  &.syntax--link { color: @md-link-url; }
  &.syntax--raw { color: @string; }
}

// GitHub Flavored Markdown
.syntax--source.syntax--gfm {
  .syntax--link {
    .syntax--entity { color: @md-link-name; }
    .syntax--punctuation { color: @syntax-text-color; }
  }
  .syntax--variable { color: @md-variable; }
  .syntax--quote { color: @string; }
  .syntax--username {
    color: @md-link-name;
    font-weight: bold;
  }
  .syntax--issue.syntax--number {
    color: @md-issue;
    font-weight: bold;
  }
}

.syntax--source.syntax--elixir {
  .syntax--variable.syntax--other {
    &.syntax--constant { color: @class-call; }
    &.syntax--anonymous { color: @function-def; }
  }
}

.syntax--source.syntax--js {
  .syntax--string {
    &.syntax--unquoted { color: @symbol; }
    .syntax--quasi { color: @syntax-text-color;
      .syntax--punctuation { color: @interpol; }
    }
  }
  .syntax--variable {
    .syntax--object { color: @variable; }
    &.syntax--readwrite { color: @syntax-text-color; }
  }
  .syntax--meta{
    &.syntax--function-call {
      .syntax--entity.syntax--name.syntax--function { color: @function-call; }
    }
    &.syntax--method-call > .syntax--entity.syntax--name.syntax--function { color: @function-call; }
    &.syntax--parameters {
      .syntax--support.syntax--class { color: @variable; }
    }
  }
}

.syntax--source.syntax--c {
  .syntax--punctuation.syntax--definition.syntax--parameters { color: @syntax-text-color; }
}

.syntax--source.syntax--css {
  .syntax--variable.syntax--other { color: @variable; }
}

.syntax--source.syntax--rust {
  .syntax--storage { color: @number; }
  .syntax--keyword.syntax--other { color: @keyword; }
  .syntax--support.syntax--constant { color: @constant; }
}
